//apply from: 'http://dl.bintray.com/content/shemnon/javafx-gradle/javafx.plugin'

//apply from: 'http://gradle-plugins.mihosoft.eu/latest/vlicenseheader.gradle'
//repairHeaders.licenseHeaderText = new File(projectDir,'../license-template.txt')
apply plugin: 'idea'

apply from: 'version-info.gradle'
apply from: 'jdkdetect.gradle'

apply from: 'lib/gradle/javafx.plugin'
//apply from: 'maven-deployment.gradle'
apply from: 'maven-deployment-local.gradle'

repositories {
    
    mavenLocal()
    
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.5'
}

dependencies {
    //    compile "org.jfxtras:jfxtras-labs-8.0:8.0-r1-SNAPSHOT"
    compile "com.thoughtworks.xstream:xstream:1.4.4"
    if (project.jdk == 7) {
//        compile fileTree (dir: 'lib/jfxtras/jdk7/', includes: ['*.jar'])
        compile "org.jfxtras:jfxtras-labs:2.2-r6-SNAPSHOT"
    } else if (project.jdk == 8) {
        compile "org.jfxtras:jfxtras-labs-8.0:8.0-r1-SNAPSHOT"
        //compile fileTree (dir: 'lib/jfxtras/jdk8/', includes: ['*.jar'])
    }
    compile project(':vworkflows-core')    
    // compile fileTree (dir: 'path-to-libdir', includes: ['*.jar'])
}

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/']
        }
        
        resources {
            srcDirs = ['src/']
        }
    }

    test {
        java {
            srcDirs = ['test/']
        }
    }
}

//compileJava {
//    options.fork=true
//    options.compilerArgs+="-Xlint:unchecked"
//}




javafx {
    mainClass "eu.mihosoft.vrl.workflow.demo.Main"
}

jfxDeploy {
    packaging = "image"
}

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}